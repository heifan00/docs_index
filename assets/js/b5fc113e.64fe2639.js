"use strict";(self.webpackChunkhif_icu=self.webpackChunkhif_icu||[]).push([[6062],{3905:(n,t,e)=>{e.d(t,{Zo:()=>c,kt:()=>w});var r=e(7294);function a(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function i(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,r)}return e}function o(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?i(Object(e),!0).forEach((function(t){a(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):i(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function l(n,t){if(null==n)return{};var e,r,a=function(n,t){if(null==n)return{};var e,r,a={},i=Object.keys(n);for(r=0;r<i.length;r++)e=i[r],t.indexOf(e)>=0||(a[e]=n[e]);return a}(n,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(r=0;r<i.length;r++)e=i[r],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(a[e]=n[e])}return a}var u=r.createContext({}),s=function(n){var t=r.useContext(u),e=t;return n&&(e="function"==typeof n?n(t):o(o({},t),n)),e},c=function(n){var t=s(n.components);return r.createElement(u.Provider,{value:t},n.children)},p="mdxType",g={inlineCode:"code",wrapper:function(n){var t=n.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(n,t){var e=n.components,a=n.mdxType,i=n.originalType,u=n.parentName,c=l(n,["components","mdxType","originalType","parentName"]),p=s(e),m=a,w=p["".concat(u,".").concat(m)]||p[m]||g[m]||i;return e?r.createElement(w,o(o({ref:t},c),{},{components:e})):r.createElement(w,o({ref:t},c))}));function w(n,t){var e=arguments,a=t&&t.mdxType;if("string"==typeof n||a){var i=e.length,o=new Array(i);o[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=n,l[p]="string"==typeof n?n:a,o[1]=l;for(var s=2;s<i;s++)o[s]=e[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,e)}m.displayName="MDXCreateElement"},487:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=e(7462),a=(e(7294),e(3905));const i={title:"JJWT\u6846\u67b6\u7684\u4f7f\u7528",tags:["jwt","\u9274\u6743"],categories:["Java"],date:new Date("2022-02-15T20:05:06.000Z"),urlname:"/jjwt_demo",top:null},o=void 0,l={unversionedId:"\u539f\u535a\u5ba2\u6587\u4ef6/JJWT\u6846\u67b6\u7684\u4f7f\u7528",id:"\u539f\u535a\u5ba2\u6587\u4ef6/JJWT\u6846\u67b6\u7684\u4f7f\u7528",title:"JJWT\u6846\u67b6\u7684\u4f7f\u7528",description:"JWT\u4ecb\u7ecd",source:"@site/docs/\u539f\u535a\u5ba2\u6587\u4ef6/JJWT\u6846\u67b6\u7684\u4f7f\u7528.md",sourceDirName:"\u539f\u535a\u5ba2\u6587\u4ef6",slug:"/\u539f\u535a\u5ba2\u6587\u4ef6/JJWT\u6846\u67b6\u7684\u4f7f\u7528",permalink:"/\u539f\u535a\u5ba2\u6587\u4ef6/JJWT\u6846\u67b6\u7684\u4f7f\u7528",draft:!1,tags:[{label:"jwt",permalink:"/tags/jwt"},{label:"\u9274\u6743",permalink:"/tags/\u9274\u6743"}],version:"current",frontMatter:{title:"JJWT\u6846\u67b6\u7684\u4f7f\u7528",tags:["jwt","\u9274\u6743"],categories:["Java"],date:"2022-02-15T20:05:06.000Z",urlname:"/jjwt_demo",top:null},sidebar:"tutorialSidebar",previous:{title:"HuTool\u5de5\u5177\u7c7b",permalink:"/\u539f\u535a\u5ba2\u6587\u4ef6/Hutool\u5de5\u5177\u7c7b\u4e4bvalidator\u5b57\u6bb5\u9a8c\u8bc1\u5668"},next:{title:"Java\u8fd0\u884c\u547d\u4ee4\u89e3\u6790",permalink:"/\u539f\u535a\u5ba2\u6587\u4ef6/Java\u8fd0\u884c\u547d\u4ee4\u89e3\u6790"}},u={},s=[{value:"JWT\u4ecb\u7ecd",id:"jwt\u4ecb\u7ecd",level:3},{value:"\u4f7f\u7528\u573a\u666f",id:"\u4f7f\u7528\u573a\u666f",level:4},{value:"JWT\u7684\u7ec4\u6210",id:"jwt\u7684\u7ec4\u6210",level:4},{value:"JWT\u7684\u6846\u67b6\uff1aJJWT",id:"jwt\u7684\u6846\u67b6jjwt",level:4},{value:"\u5f00\u59cb\u4e0a\u624b",id:"\u5f00\u59cb\u4e0a\u624b",level:3},{value:"demo-jjwt",id:"demo-jjwt",level:4},{value:"\u8fdb\u9636\u64cd\u4f5c",id:"\u8fdb\u9636\u64cd\u4f5c",level:3},{value:"JwtAuthInfo",id:"jwtauthinfo",level:4},{value:"JwtAuthManager",id:"jwtauthmanager",level:4},{value:"JwtAuthorizationManager",id:"jwtauthorizationmanager",level:4},{value:"\u9274\u6743\u601d\u8def",id:"\u9274\u6743\u601d\u8def",level:3}],c={toc:s},p="wrapper";function g(n){let{components:t,...e}=n;return(0,a.kt)(p,(0,r.Z)({},c,e,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"jwt\u4ecb\u7ecd"},"JWT\u4ecb\u7ecd"),(0,a.kt)("p",null,"JWTs\u662fJSON\u5bf9\u8c61\u7684\u7f16\u7801\u8868\u793a\u3002JSON\u5bf9\u8c61\u7531\u96f6\u6216\u591a\u4e2a\u540d\u79f0/\u503c\u5bf9\u7ec4\u6210\uff0c\u5176\u4e2d\u540d\u79f0\u4e3a\u5b57\u7b26\u4e32\uff0c\u503c\u4e3a\u4efb\u610fJSON\u503c\u3002JWT\u6709\u52a9\u4e8e\u5728clear(\u4f8b\u5982\u5728URL\u4e2d)\u53d1\u9001\u8fd9\u6837\u7684\u4fe1\u606f\uff0c\u53ef\u4ee5\u88ab\u4fe1\u4efb\u4e3a\u4e0d\u53ef\u8bfb(\u5373\u52a0\u5bc6\u7684)\u3001\u4e0d\u53ef\u4fee\u6539\u7684(\u5373\u7b7e\u540d)\u548cURL - safe(\u5373Base64\u7f16\u7801\u7684)\u3002"),(0,a.kt)("h4",{id:"\u4f7f\u7528\u573a\u666f"},"\u4f7f\u7528\u573a\u666f"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Authorization")," (\u6388\u6743) \uff1a\u4e00\u65e6\u7528\u6237\u767b\u5f55\uff0c\u540e\u7eed\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u5c06\u5305\u542bJWT\uff0c\u5141\u8bb8\u7528\u6237\u8bbf\u95ee\u8be5\u4ee4\u724c\u5141\u8bb8\u7684\u8def\u7531\u3001\u670d\u52a1\u548c\u8d44\u6e90\u3002\u5355\u70b9\u767b\u5f55\u662f\u73b0\u5728\u5e7f\u6cdb\u4f7f\u7528\u7684JWT\u7684\u4e00\u4e2a\u7279\u6027\uff0c\u56e0\u4e3a\u5b83\u7684\u5f00\u9500\u5f88\u5c0f\uff0c\u5e76\u4e14\u53ef\u4ee5\u8f7b\u677e\u5730\u8de8\u57df\u4f7f\u7528\u3002")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Information Exchange")," (\u4fe1\u606f\u4ea4\u6362)\uff1a\u5bf9\u4e8e\u5b89\u5168\u7684\u5728\u5404\u65b9\u4e4b\u95f4\u4f20\u8f93\u4fe1\u606f\u800c\u8a00\uff0cJSON Web Tokens\u65e0\u7591\u662f\u4e00\u79cd\u5f88\u597d\u7684\u65b9\u5f0f\u3002\u56e0\u4e3aJWTs\u53ef\u4ee5\u88ab\u7b7e\u540d\uff0c\u4f8b\u5982\uff0c\u7528\u516c\u94a5/\u79c1\u94a5\u5bf9\uff0c\u4f60\u53ef\u4ee5\u786e\u5b9a\u53d1\u9001\u4eba\u5c31\u662f\u5b83\u4eec\u6240\u8bf4\u7684\u90a3\u4e2a\u4eba\u3002\u53e6\u5916\uff0c\u7531\u4e8e\u7b7e\u540d\u662f\u4f7f\u7528\u5934\u548c\u6709\u6548\u8d1f\u8f7d\u8ba1\u7b97\u7684\uff0c\u60a8\u8fd8\u53ef\u4ee5\u9a8c\u8bc1\u5185\u5bb9\u6ca1\u6709\u88ab\u7be1\u6539\u3002"))),(0,a.kt)("h4",{id:"jwt\u7684\u7ec4\u6210"},"JWT\u7684\u7ec4\u6210"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Header\uff1a\u6807\u9898\u5305\u542b\u4e86\u4ee4\u724c\u7684\u5143\u6570\u636e\uff0c\u5e76\u4e14\u5728\u6700\u5c0f\u5305\u542b\u7b7e\u540d\u548c/\u6216\u52a0\u5bc6\u7b97\u6cd5\u7684\u7c7b\u578b\uff1b")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Claims\uff1aClaims\u5305\u542b\u60f3\u8981\u7b7e\u7f72\u7684\u4efb\u4f55\u4fe1\u606f\uff1b")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"JSON Web Signature (JWS)\uff1a\u5728Header\u4e2d\u6307\u5b9a\u7684\u4f7f\u7528\u8be5\u7b97\u6cd5\u7684\u6570\u5b57\u7b7e\u540d\u548c\u58f0\u660e"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'Header:\n{\n  "alg": "HS256",\n  "typ": "JWT"\n}\n\nClaims:\n{\n  "sub": "1234567890",\n  "name": "John Doe",\n  "admin": true\n}\n\nSignature:\nbase64UrlEncode(Header) + "." + base64UrlEncode(Claims),\n')),(0,a.kt)("h4",{id:"jwt\u7684\u6846\u67b6jjwt"},"JWT\u7684\u6846\u67b6\uff1aJJWT"),(0,a.kt)("p",null,"JJWT\u662f\u4e00\u4e2a\u63d0\u4f9b\u7aef\u5230\u7aef\u7684JWT\u521b\u5efa\u548c\u9a8c\u8bc1\u7684Java\u5e93\u3002\u6c38\u8fdc\u514d\u8d39\u548c\u5f00\u6e90(Apache License\uff0c\u7248\u672c2.0)\uff0cJJWT\u5f88\u5bb9\u6613\u4f7f\u7528\u548c\u7406\u89e3\u3002\u5b83\u88ab\u8bbe\u8ba1\u6210\u4e00\u4e2a\u4ee5\u5efa\u7b51\u4e3a\u4e2d\u5fc3\u7684\u6d41\u7545\u754c\u9762\uff0c\u9690\u85cf\u4e86\u5b83\u7684\u5927\u90e8\u5206\u590d\u6742\u6027\u3002"),(0,a.kt)("h3",{id:"\u5f00\u59cb\u4e0a\u624b"},"\u5f00\u59cb\u4e0a\u624b"),(0,a.kt)("h4",{id:"demo-jjwt"},"demo-jjwt"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u521b\u5efamaven\u9879\u76ee\uff1b")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u5bfc\u5165\u4f9d\u8d56"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"\x3c!-- jjwt  --\x3e\n        <dependency>\n            <groupId>io.jsonwebtoken</groupId>\n            <artifactId>jjwt</artifactId>\n            <version>${jjwt.version}</version>\n        </dependency>\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"JwtUtils")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'@Slf4j\npublic class JwtUtils {\n    public static final String ACCESS_TOKEN_HEADER = "Authorization";\n    public static final String REFRESH_TOKEN_HEADER = "Refresh-Token";\n    public static final String TOKEN_PREFIX = "Bearer ";\n\n    /**\n     * \u9ed8\u8ba4\u7684 \u7528\u6237\u7eed\u671f\u65f6\u957f\uff08\u65f6\u95f4\u6233\uff09 7\u5929\n     */\n    private static final Long DEF_RENEWAL_TIMESTAMP = 7 * 24 * 60 * 60 * 1L;\n\n    /**\n     * \u9ed8\u8ba4\u7684 \u6821\u9a8c\u65f6\u95f4\u95f4\u9694\uff08\u65f6\u95f4\u6233\uff09\n     */\n    private static final Long DEF_CHECK_INTERVAL = 1800L;\n\n    /**\n     * \u9ed8\u8ba4\u7684 jwt \u8fc7\u671f\u65f6\u95f4 1\u5929\n     */\n    private static final Long DEF_EXPIRATION = 24 * 60 * 60 * 1000L;\n    /**\n     * \u7b7e\u53d1\u7684\u5bc6\u94a5\n     */\n    private static final String SECRET = "demo.jjwt.token";\n    /**\n     * \u7b7e\u53d1\u5355\u4f4d\n     */\n    private static final String DEF_ISS = "https://www.keaijing.com";\n\n    /**\n     * \u4ee4\u724c\u7528\u6237\u4fe1\u606f\n     */\n    private static final String U_DATA = "U";\n\n\n    /**\n     * \u7b7e\u53d1token\n     */\n    public static String issueJwt(Long phoneNum) {\n        Assert.notNull(phoneNum, "phoneNum is null");\n        return Jwts.builder()\n                .setHeaderParam("typ", "JWT")\n                .setSubject(phoneNum + "")\n                .setIssuer(DEF_ISS)\n                .setIssuedAt(DateUtil.date())\n                .setExpiration(DateUtil.date(System.currentTimeMillis() + DEF_EXPIRATION))\n                .signWith(SignatureAlgorithm.HS512, SECRET)\n                .compact();\n    }\n\n    /**\n     * \u68c0\u67e5\u662f\u5426\u8fc7\u671f\n     */\n    public static boolean checkJwtExpiration(String jwt) {\n        Claims claims = null;\n        try {\n            claims = Jwts.parser()\n                    .setSigningKey(SECRET)\n                    .parseClaimsJws(jwt.trim())\n                    .getBody();\n        } catch (RuntimeException e) {\n            return true;\n        }\n        if (null == claims) {\n            return true;\n        }\n        try {\n            return claims.getExpiration().before(new Date());\n        } catch (RuntimeException ex) {\n            log.warn("jwt \u8fc7\u671f\u5566\uff5e\uff5e\uff5e\uff5e");\n        }\n        return true;\n    }\n\n    public static void main(String[] args) {\n        String token = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxNzYzMzgyMzk4MSIsImlzcyI6Imh0dHBzOi8vd3d3LmtlYWlqaW5nLmNvbSIsImlhdCI6MTY0NDIyMjAwMSwiZXhwIjoxNjQ0MzA4NDAxfQ.WBX6S1HQZqZtUsjH7XGKlIRWoNCmSSLq7nn24jXSbo4PCTIqSj-Uo6XiEjhda5-Vo91_lhnwSXCb2qVctFNqjQ";\n//        log.info(issueJwt(17612343344L));\n        log.info("" + checkJwtExpiration(token));\n    }\n}\n')),(0,a.kt)("h3",{id:"\u8fdb\u9636\u64cd\u4f5c"},"\u8fdb\u9636\u64cd\u4f5c"),(0,a.kt)("h4",{id:"jwtauthinfo"},"JwtAuthInfo"),(0,a.kt)("p",null,"\u5728\u7528\u6237Token\u91cc\u5b58\u50a8\u7528\u6237\u4fe1\u606f\uff0c\u65b9\u4fbf\u89e3\u6790\u540e\u76f4\u63a5\u8fdb\u884c\u6821\u9a8c\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * jwt\u7528\u6237\u4fe1\u606f\n *\n * @author HiF\n * @date 2022/2/9 13:49\n */\n@Data\n@Builder\npublic class JwtAuthInfo {\n\n    /**\n     * \u7528\u6237id\n     */\n    private String usrId;\n\n    /**\n     * \u7528\u6237\u8d26\u53f7\n     */\n    private String accountNumber;\n\n    /**\n     * \u7528\u6237\u522b\u79f0\n     */\n    private String nickName;\n\n    /**\n     * \u6821\u9a8c\u65f6\u95f4\u95f4\u9694\uff08\u65f6\u95f4\u6233\uff09\n     */\n    private Long checkInterval;\n\n    /**\n     * jwt \u8fc7\u671f\u65f6\u95f4\n     */\n    private Long expiration;\n}\n")),(0,a.kt)("h4",{id:"jwtauthmanager"},"JwtAuthManager"),(0,a.kt)("p",null,"\u521b\u5efaJwtAuthManager\u7528\u6237\u6743\u9650\u7ba1\u7406\u7c7b\uff0c\u7528\u4e8e\u6821\u9a8cToken\u683c\u5f0f\u3001\u7b7e\u53d1Toekn\u7b49\u64cd\u4f5c\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * jwt\u7528\u6237\u6743\u9650\u7ba1\u7406\n *\n * @author HiF\n * @date 2022/2/9 14:03\n */\n@Slf4j\npublic class JwtAuthManager {\n    public static final String ACCESS_TOKEN_HEADER = "Authorization";\n    public static final String TOKEN_PREFIX = "Bearer ";\n\n    /**\n     * \u9ed8\u8ba4\u7684 \u6821\u9a8c\u65f6\u95f4\u95f4\u9694\uff08\u65f6\u95f4\u6233\uff09\n     */\n    private static final Long DEF_CHECK_INTERVAL = 1800L;\n\n    /**\n     * \u9ed8\u8ba4\u7684 jwt \u8fc7\u671f\u65f6\u95f4 1\u5929\n     */\n    private static final Long DEF_EXPIRATION = 24 * 60 * 60 * 1L;\n    /**\n     * \u7b7e\u53d1\u7684\u5bc6\u94a5\n     */\n    private static final String SECRET = "demo.jjwt.token";\n    /**\n     * \u7b7e\u53d1\u5355\u4f4d\n     */\n    private static final String DEF_ISS = "https://www.keaijing.com";\n\n    /**\n     * \u4ee4\u724c\u7528\u6237\u4fe1\u606f\n     */\n    private static final String U_DATA = "U";\n\n    public static JwtAuthInfo getJwtAuthentication(HttpServletRequest request) {\n        String token = getJwt(request);\n        return getJwtAuthInfo(token);\n    }\n\n    private static String getJwt(HttpServletRequest request) {\n        String tokenHeader = request.getHeader(JwtAuthManager.ACCESS_TOKEN_HEADER);\n        if (tokenHeader == null || !tokenHeader.startsWith(JwtAuthManager.TOKEN_PREFIX)) {\n            return null;\n        }\n        String token = tokenHeader.replace(JwtAuthManager.TOKEN_PREFIX, "");\n        if (Strings.isEmpty(token)) {\n            return null;\n        }\n        return token.trim();\n    }\n\n    public static JwtAuthInfo getJwtAuthInfo(String token) {\n        if (null == token) {\n            log.error(" header \u4e2d\u672a\u627e\u5230 jwt\u4fe1\u606f");\n            throw new BizException(MessageCodeEnum.NOT_LOGIN);\n        }\n        token = token.trim();\n        JwtAuthInfo JwtAuthInfo = JwtAuthInfo(token);\n        if (null == JwtAuthInfo) {\n            log.error(" jwt \u89e3\u6790\u5931\u8d25");\n            throw new BizException(MessageCodeEnum.NOT_LOGIN);\n        }\n        return JwtAuthInfo;\n    }\n\n    public static JwtAuthInfo JwtAuthInfo(String token) {\n        Claims claims = null;\n        try {\n            claims = Jwts.parser()\n                    .setSigningKey(SECRET)\n                    .parseClaimsJws(token.trim())\n                    .getBody();\n        } catch (Exception e) {\n            log.warn("token \u68c0\u67e5\u5931\u8d25,\u65e0\u6cd5\u5237\u65b0token\u3002");\n            return null;\n        }\n        Gson gson = new Gson();\n        Object obj = claims.get(U_DATA);\n        if (null == obj) {\n            return null;\n        }\n        return gson.fromJson(obj.toString(), JwtAuthInfo.class);\n    }\n\n    /**\n     * \u7b7e\u53d1token\n     *\n     * @param userId\n     * @param checkInterval\n     * @param expiration\n     * @return java.lang.String\n     * @author HiF\n     * @date 2022/2/9 14:12\n     */\n    public static String issueJwt(String userId,\n                                  Long checkInterval,\n                                  Long expiration) {\n        Assert.notNull(userId, "userId is null");\n        Assert.notNull(checkInterval, "checkInterval is null");\n        Assert.notNull(expiration, "expiration is null");\n        JwtAuthInfo tokenInfo = JwtAuthInfo.builder()\n                .usrId(userId)\n                .checkInterval(checkInterval)\n                .expiration(expiration)\n                .build();\n        return issueJwt(tokenInfo);\n    }\n\n    public static String issueJwt(JwtAuthInfo JwtAuthInfo) {\n        Gson gson = new Gson();\n        String u = gson.toJson(JwtAuthInfo);\n        HashMap<String, Object> map = new HashMap<>();\n        map.put(U_DATA, u);\n        return Jwts.builder()\n                .signWith(SignatureAlgorithm.HS512, SECRET)\n                .setClaims(map)\n                .setIssuer(DEF_ISS)\n                .setSubject(String.valueOf(JwtAuthInfo.getUsrId()))\n                .setIssuedAt(new Date())\n                .setExpiration(new Date(System.currentTimeMillis() + JwtAuthInfo.getExpiration() * 1000))\n                .compact();\n    }\n\n    /**\n     * \u68c0\u67e5\u662f\u5426\u8fc7\u671f\n     *\n     * @param jwt true \u8fc7\u671f false\u672a\u8fc7\u671f\n     * @return\n     */\n    public static boolean checkJwtExpiration(String jwt) {\n        Claims claims = null;\n        try {\n            claims = Jwts.parser()\n                    .setSigningKey(SECRET)\n                    .parseClaimsJws(jwt.trim())\n                    .getBody();\n        } catch (RuntimeException e) {\n            return true;\n        }\n        if (null == claims) {\n            return true;\n        }\n        try {\n            return claims.getExpiration().before(new Date());\n        } catch (RuntimeException ex) {\n            log.warn("jwt \u8fc7\u671f\u5566\uff5e\uff5e\uff5e\uff5e");\n        }\n        return true;\n    }\n\n\n    public static String refresh(String token) {\n        Claims claims = null;\n        try {\n            claims = Jwts.parser()\n                    .setSigningKey(SECRET)\n                    .parseClaimsJws(token.trim())\n                    .getBody();\n        } catch (Exception e) {\n            log.warn("token \u68c0\u67e5\u5931\u8d25,\u65e0\u6cd5\u5237\u65b0token\u3002");\n            return null;\n        }\n        try {\n            claims.getExpiration().before(new Date());\n        } catch (RuntimeException ex) {\n            log.warn("jwt \u8fc7\u671f\u5566\uff5e\uff5e\uff5e\uff5e");\n            return null;\n        }\n        Object u = claims.get(U_DATA);\n        if (null == u) {\n            log.warn("jwt \u65e0\u6548 \uff5e\uff5e\uff5e\uff5e");\n            return null;\n        }\n        Gson gson = new Gson();\n        JwtAuthInfo tokenInfo = gson.fromJson(u.toString(), JwtAuthInfo.class);\n        Long expiration = tokenInfo.getExpiration();\n        HashMap<String, Object> map = new HashMap<>(1);\n        map.put(U_DATA, u);\n        return Jwts.builder()\n                .signWith(SignatureAlgorithm.HS512, SECRET)\n                .setClaims(map)\n                .setIssuer(DEF_ISS)\n                .setSubject(String.valueOf(tokenInfo.getUsrId()))\n                .setIssuedAt(new Date())\n                .setExpiration(new Date(System.currentTimeMillis() + expiration * 1000))\n                .compact();\n    }\n\n    /**\n     * \u521b\u5efa\u9ed8\u8ba4\u6761\u4ef6\u5230U_DATA\n     *\n     * @param usrId\n     * @return com.heifan.demo.config.auth.JwtAuthInfo\n     * @author HiF\n     * @date 2022/2/9 14:12\n     */\n    public static JwtAuthInfo createJwtAuthInfo(String usrId) {\n        return JwtAuthInfo.builder()\n                .usrId(usrId)\n                .checkInterval(DEF_CHECK_INTERVAL)\n                .expiration(DEF_EXPIRATION)\n                .build();\n    }\n}\n')),(0,a.kt)("h4",{id:"jwtauthorizationmanager"},"JwtAuthorizationManager"),(0,a.kt)("p",null,"\u521b\u5efajwt\u8ba4\u8bc1\u7c7b\uff0c\u7528\u4e8e\u6821\u9a8c\u8d26\u53f7\u5728\u7ebf\u72b6\u6001\u4ee5\u53ca\u89e3\u6790Token\u91cc\u7684\u7528\u6237\u4fe1\u606f\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * jwt\u8ba4\u8bc1\n * @author HiF\n * @date 2022/2/9 14:17\n */ \n@Component\n@Slf4j\npublic class JwtAuthorizationManager {\n\n    public static final String ACCOUNT_AUTH_ONLINE_KEY = "demo:jwt:";\n\n    @Autowired\n    RedisCacheServiceI redisCacheService;\n\n    public String authorization(HttpServletRequest request) {\n        String token = getJwt(request);\n        if (null == token) {\n            return null;\n        }\n        return authorization(token);\n    }\n\n    private String getJwt(HttpServletRequest request) {\n        String tokenHeader = request.getHeader(JwtAuthManager.ACCESS_TOKEN_HEADER);\n        if (tokenHeader == null || !tokenHeader.startsWith(JwtAuthManager.TOKEN_PREFIX)) {\n            return null;\n        }\n        String token = tokenHeader.replace(JwtAuthManager.TOKEN_PREFIX, "");\n        if (Strings.isEmpty(token)) {\n            return null;\n        }\n        return token.trim();\n    }\n\n    public String authorization(String tokenHeader) {\n        String token = tokenHeader.replace(JwtAuthManager.TOKEN_PREFIX, "");\n        JwtAuthInfo jwtAuthInfo = getJwtAuthInfo(token);\n        online(token, jwtAuthInfo);\n        return jwtAuthInfo.getAccountNumber();\n    }\n\n    /**\n     * \u6821\u9a8ctoken\n     * @param token\n     * @param jwtAuthInfo\n     * @return void\n     * @author HiF\n     * @date 2022/2/9 14:22\n     */\n    public void online(String token, JwtAuthInfo jwtAuthInfo){\n\n        String cacheKey = ACCOUNT_AUTH_ONLINE_KEY + jwtAuthInfo.getAccountNumber();\n        String online = redisCacheService.getStr(cacheKey);\n\n        if (null == online) {\n            log.error("\u8d26\u53f7\u672a\u767b\u5f55");\n            throw new BizException(MessageCodeEnum.NOT_LOGIN);\n        }\n        if (!online.equals(token)) {\n            log.error("\u8d26\u53f7\u5176\u4ed6\u8bbe\u5907\u767b\u5f55");\n            throw new BizException(MessageCodeEnum.USER_OFFLINE);\n        }\n    }\n\n    private JwtAuthInfo getJwtAuthInfo(String token) {\n        if (null == token) {\n            log.error(" header \u4e2d\u672a\u627e\u5230 jwt\u4fe1\u606f");\n            throw new ParamException(MessageCodeEnum.NOT_LOGIN);\n        }\n        token = token.trim();\n        JwtAuthInfo jwtAuthInfo = JwtAuthManager.getJwtAuthInfo(token);\n        if (null == jwtAuthInfo) {\n            log.error(" jwt \u89e3\u6790\u5931\u8d25");\n            throw new ParamException(MessageCodeEnum.NOT_LOGIN);\n        }\n        return jwtAuthInfo;\n    }\n}\n')),(0,a.kt)("h3",{id:"\u9274\u6743\u601d\u8def"},"\u9274\u6743\u601d\u8def"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"\u81ea\u5b9a\u4e49\u6ce8\u89e3\uff1b")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"\u8bf7\u6c42\u8fdb\u5165\u5230\u5207\u9762\uff0c\u83b7\u53d6\u8bf7\u6c42\u53c2\u6570\uff0c\u8bb0\u5f55\u8bf7\u6c42\u8def\u5f84\u53ca\u8bf7\u6c42\u53c2\u6570\uff1b")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"\u83b7\u53d6\u65b9\u6cd5\u4e2d\u58f0\u660e\u7684\u6ce8\u89e3"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-java"},"/**\n     * \u83b7\u53d6\u65b9\u6cd5\u4e2d\u58f0\u660e\u7684\u6ce8\u89e3\n     *\n     * @Author HiF\n     * @Date 2022/2/8 20:42\n     */\n    private MonitorAnnotation getDeclaredAnnotation(JoinPoint joinPoint) {\n        // \u83b7\u53d6\u65b9\u6cd5\u540d\n        String methodName = joinPoint.getSignature().getName();\n        // \u53cd\u5c04\u83b7\u53d6\u76ee\u6807\u7c7b\n        Class<?> targetClass = joinPoint.getTarget().getClass();\n        // \u62ff\u5230\u65b9\u6cd5\u5bf9\u5e94\u7684\u53c2\u6570\u7c7b\u578b\n        Class<?>[] parameterTypes = ((MethodSignature) joinPoint.getSignature()).getParameterTypes();\n        // \u6839\u636e\u7c7b\u3001\u65b9\u6cd5\u3001\u53c2\u6570\u7c7b\u578b\uff08\u91cd\u8f7d\uff09\u83b7\u53d6\u5230\u65b9\u6cd5\u7684\u5177\u4f53\u4fe1\u606f\n        Method objMethod = null;\n        try {\n            objMethod = targetClass.getMethod(methodName, parameterTypes);\n        } catch (NoSuchMethodException e) {\n            return null;\n        }\n        // \u62ff\u5230\u65b9\u6cd5\u5b9a\u4e49\u7684\u6ce8\u89e3\u4fe1\u606f\n        return objMethod.getDeclaredAnnotation(MonitorAnnotation.class);\n    }\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"\u5982\u679c\u6ce8\u89e3\u9274\u6743\u5c5e\u6027\u4e3atrue\uff0c\u5219\u89e3\u6790\u7528\u6237Token\u4e2d\u7684\u4fe1\u606f\uff1b"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-java"},"MonitorAnnotation monitorAnnotation = getDeclaredAnnotation(joinPoint);\n        if (null != monitorAnnotation) {\n            if (monitorAnnotation.auth()) {\n                // \u5982\u679c\u662fhttp\u8bf7\u6c42\n                if (httpRequest) {\n                    String accountNumber = jwtAuthorizationManager.authorization(request);\n                    // \u6b64\u5904\u5e94\u8be5\u6821\u9a8c\u7528\u6237id\u662f\u5426\u4e3a\u7a7a\n                    if (Validator.isNull(accountNumber)) {\n                        throw new ParamException(MessageCodeEnum.NOT_LOGIN);\n                    }\n                }\n            }\n        }\n")))))}g.isMDXComponent=!0}}]);