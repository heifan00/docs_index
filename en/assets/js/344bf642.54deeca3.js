"use strict";(self.webpackChunkhif_icu=self.webpackChunkhif_icu||[]).push([[8651],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},d="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,l=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=u(r),f=o,m=d["".concat(c,".").concat(f)]||d[f]||s[f]||l;return r?n.createElement(m,a(a({ref:t},p),{},{components:r})):n.createElement(m,a({ref:t},p))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=r.length,a=new Array(l);a[0]=f;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[d]="string"==typeof e?e:o,a[1]=i;for(var u=2;u<l;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},1417:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>s,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var n=r(7462),o=(r(7294),r(3905));const l={title:"\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386",tags:["\u7b97\u6cd5","leetcode"],categories:["Java"],date:new Date("2021-12-20T20:21:34.000Z"),urlname:"leetcode_94",top:null,slug:"/leetcode_94"},a=void 0,i={unversionedId:"\u539f\u535a\u5ba2\u6587\u4ef6/LeetCode-94. \u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386",id:"\u539f\u535a\u5ba2\u6587\u4ef6/LeetCode-94. \u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386",title:"\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386",description:"\u601d\u8def\u4e0e\u7b97\u6cd5",source:"@site/docs/\u539f\u535a\u5ba2\u6587\u4ef6/LeetCode-94. \u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386.md",sourceDirName:"\u539f\u535a\u5ba2\u6587\u4ef6",slug:"/leetcode_94",permalink:"/en/leetcode_94",draft:!1,tags:[{label:"\u7b97\u6cd5",permalink:"/en/tags/\u7b97\u6cd5"},{label:"leetcode",permalink:"/en/tags/leetcode"}],version:"current",frontMatter:{title:"\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386",tags:["\u7b97\u6cd5","leetcode"],categories:["Java"],date:"2021-12-20T20:21:34.000Z",urlname:"leetcode_94",top:null,slug:"/leetcode_94"},sidebar:"tutorialSidebar",previous:{title:"\u6700\u5927\u5b50\u5e8f\u548c_\u529b\u626353",permalink:"/en/leetcode_53"},next:{title:"Linux\u5e38\u7528\u547d\u4ee4",permalink:"/en/linux"}},c={},u=[{value:"\u601d\u8def\u4e0e\u7b97\u6cd5",id:"\u601d\u8def\u4e0e\u7b97\u6cd5",level:3},{value:"\u4e8c\u53c9\u6811\u7684\u904d\u5386\u65b9\u5f0f",id:"\u4e8c\u53c9\u6811\u7684\u904d\u5386\u65b9\u5f0f",level:4},{value:"\u9012\u5f52\u5b9e\u73b0\u904d\u5386",id:"\u9012\u5f52\u5b9e\u73b0\u904d\u5386",level:4},{value:"\u5b9e\u73b0",id:"\u5b9e\u73b0",level:4},{value:"\u590d\u6742\u5ea6\u5206\u6790",id:"\u590d\u6742\u5ea6\u5206\u6790",level:4}],p={toc:u},d="wrapper";function s(e){let{components:t,...r}=e;return(0,o.kt)(d,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"\u601d\u8def\u4e0e\u7b97\u6cd5"},"\u601d\u8def\u4e0e\u7b97\u6cd5"),(0,o.kt)("h4",{id:"\u4e8c\u53c9\u6811\u7684\u904d\u5386\u65b9\u5f0f"},"\u4e8c\u53c9\u6811\u7684\u904d\u5386\u65b9\u5f0f"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u5148\u5e8f\u904d\u5386\uff1a\u6839 - \u5de6 - \u53f3"),(0,o.kt)("li",{parentName:"ul"},"\u4e2d\u5e8f\u904d\u5386\uff1a\u5de6 - \u6839 - \u53f3"),(0,o.kt)("li",{parentName:"ul"},"\u540e\u5e8f\u904d\u5386\uff1a\u5de6 - \u53f3 - \u6839"),(0,o.kt)("li",{parentName:"ul"},"\u5c42\u5e8f\u904d\u5386\uff1a\u6bcf\u4e00\u5c42\u4ece\u5de6\u81f3\u53f3")),(0,o.kt)("h4",{id:"\u9012\u5f52\u5b9e\u73b0\u904d\u5386"},"\u9012\u5f52\u5b9e\u73b0\u904d\u5386"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u6309\u7167\u5de6 - \u6839 - \u53f3\u7684\u987a\u5e8f\u904d\u5386\u6574\u4e2a\u4e8c\u53c9\u6811\uff0c\u5728\u904d\u5386\u5de6\u5b50\u6811\u6216\u53f3\u5b50\u6811\u7684\u65f6\u5019\u91c7\u7528\u540c\u6837\u7684\u65b9\u5f0f\u904d\u5386\uff0c\u5177\u6709\u5929\u7136\u7684\u9012\u5f52\u6027\uff0c\u800c\u9012\u5f52\u7684\u7ec8\u6b62\u6761\u4ef6\u5c31\u662f\u78b0\u5230\u7a7a\u8282\u70b9\uff1b"),(0,o.kt)("li",{parentName:"ul"},"\u5b9a\u4e49 inorder(root) \u8868\u793a\u5f53\u524d\u904d\u5386\u5230 root \u8282\u70b9\u7684\u7b54\u6848\uff0c\u90a3\u4e48\u6309\u7167\u5b9a\u4e49\uff0c\u6211\u4eec\u53ea\u8981\u9012\u5f52\u8c03\u7528 inorder(root.left) \u6765\u904d\u5386 root \u8282\u70b9\u7684\u5de6\u5b50\u6811\uff0c\u7136\u540e\u5c06 root \u8282\u70b9\u7684\u503c\u52a0\u5165\u7b54\u6848\uff0c\u518d\u9012\u5f52\u8c03\u7528inorder(root.right) \u6765\u904d\u5386 root \u8282\u70b9\u7684\u53f3\u5b50\u6811\u5373\u53ef\u3002")),(0,o.kt)("h4",{id:"\u5b9e\u73b0"},"\u5b9e\u73b0"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<Integer> inorderTraversal(TreeNode root) {\n        ArrayList res = new ArrayList();\n        inorder(root,res);\n        return res;\n    }\n\n    public void inorder(TreeNode root, List<Integer> res){\n        if(null == root){\n            return;\n        }\n        inorder(root.left, res);\n        res.add(root.val);\n        inorder(root.right, res);\n    }\n}\n")),(0,o.kt)("h4",{id:"\u590d\u6742\u5ea6\u5206\u6790"},"\u590d\u6742\u5ea6\u5206\u6790"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u5176\u4e2d n \u4e3a\u4e8c\u53c9\u6811\u8282\u70b9\u7684\u4e2a\u6570\u3002\u4e8c\u53c9\u6811\u7684\u904d\u5386\u4e2d\u6bcf\u4e2a\u8282\u70b9\u4f1a\u88ab\u8bbf\u95ee\u4e00\u6b21\u4e14\u53ea\u4f1a\u88ab\u8bbf\u95ee\u4e00\u6b21\u3002")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)\u3002\u7a7a\u95f4\u590d\u6742\u5ea6\u53d6\u51b3\u4e8e\u9012\u5f52\u7684\u6808\u6df1\u5ea6\uff0c\u800c\u6808\u6df1\u5ea6\u5728\u4e8c\u53c9\u6811\u4e3a\u4e00\u6761\u94fe\u7684\u60c5\u51b5\u4e0b\u4f1a\u8fbe\u5230 O(n) \u7684\u7ea7\u522b\u3002"))),(0,o.kt)("p",null,"\u6765\u6e90\uff1a\u529b\u6263\uff08",(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/binary-tree-inorder-traversal/solution/er-cha-shu-de-zhong-xu-bian-li-by-leetcode-solutio/"},"LeetCode"),"\uff09"))}s.isMDXComponent=!0}}]);