"use strict";(self.webpackChunkhif_icu=self.webpackChunkhif_icu||[]).push([[6056],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=a,f=u["".concat(s,".").concat(d)]||u[d]||m[d]||i;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2072:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const i={title:"\u6570\u636e\u5e93\u5355\u8868\u5b9e\u73b0\u591a\u7ea7\u5b50\u6811",tags:["\u6570\u636e\u5e93","Tree","\u6811"],categories:["Java"],date:new Date("2022-03-22T21:42:09.000Z"),urlname:"tree_test",top:null,slug:"/tree_test"},o=void 0,l={unversionedId:"\u539f\u535a\u5ba2\u6587\u4ef6/\u6570\u636e\u5e93\u5355\u8868\u5b9e\u73b0\u591a\u7ea7\u5b50\u6811",id:"\u539f\u535a\u5ba2\u6587\u4ef6/\u6570\u636e\u5e93\u5355\u8868\u5b9e\u73b0\u591a\u7ea7\u5b50\u6811",title:"\u6570\u636e\u5e93\u5355\u8868\u5b9e\u73b0\u591a\u7ea7\u5b50\u6811",description:"\u6458\u8981",source:"@site/docs/\u539f\u535a\u5ba2\u6587\u4ef6/\u6570\u636e\u5e93\u5355\u8868\u5b9e\u73b0\u591a\u7ea7\u5b50\u6811.md",sourceDirName:"\u539f\u535a\u5ba2\u6587\u4ef6",slug:"/tree_test",permalink:"/en/tree_test",draft:!1,tags:[{label:"\u6570\u636e\u5e93",permalink:"/en/tags/\u6570\u636e\u5e93"},{label:"Tree",permalink:"/en/tags/tree"},{label:"\u6811",permalink:"/en/tags/\u6811"}],version:"current",frontMatter:{title:"\u6570\u636e\u5e93\u5355\u8868\u5b9e\u73b0\u591a\u7ea7\u5b50\u6811",tags:["\u6570\u636e\u5e93","Tree","\u6811"],categories:["Java"],date:"2022-03-22T21:42:09.000Z",urlname:"tree_test",top:null,slug:"/tree_test"},sidebar:"tutorialSidebar",previous:{title:"\u5e94\u8be5\u62b5\u5236\u7684\u54c1\u724c",permalink:"/en/resist"},next:{title:"\u6570\u636e\u5e93\u5b58\u50a8\u6280\u5de7",permalink:"/en/mysql_tips"}},s={},p=[{value:"\u6458\u8981",id:"\u6458\u8981",level:3},{value:"\u5b9e\u4f53\u7c7b",id:"\u5b9e\u4f53\u7c7b",level:3},{value:"\u529f\u80fd\u5b9e\u73b0",id:"\u529f\u80fd\u5b9e\u73b0",level:3}],c={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"\u6458\u8981"},"\u6458\u8981"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u6570\u636e\u5e93\u5355\u8868\u5b58\u50a8\u591a\u7ea7\u522b\u6570\u636e\uff0c\u4f7f\u7528parent_id\u5b57\u6bb5\u8fdb\u884c\u5173\u8054\u3002")),(0,a.kt)("h3",{id:"\u5b9e\u4f53\u7c7b"},"\u5b9e\u4f53\u7c7b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package com.heifan.demo.entity;\n\nimport com.baomidou.mybatisplus.annotation.IdType;\nimport com.baomidou.mybatisplus.annotation.TableId;\nimport java.io.Serializable;\nimport java.util.List;\n\nimport lombok.Data;\nimport lombok.EqualsAndHashCode;\n\n/**\n * <p>\n * \u6811\u5f62\u7ed3\u6784\u6d4b\u8bd5\u8868\n * </p>\n *\n * @author HiF\n * @since 2022-03-22\n */\n@Data\n@EqualsAndHashCode(callSuper = false)\npublic class TestTreeNode implements Serializable {\n\n    private static final long serialVersionUID = 1L;\n\n    /**\n     * \u4e3b\u952e\n     */\n    @TableId(value = "id", type = IdType.AUTO)\n    private Integer id;\n\n    /**\n     * \u7236\u7ea7\u4e3b\u952e\uff080\uff1a\u65e0\u7236\u7ea7\uff09\n     */\n    private Integer parentId;\n\n    /**\n     * \u8282\u70b9\u540d\u79f0\n     */\n    private String nodeName;\n\n}\n\n')),(0,a.kt)("p",null,"\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5199\u6cd5\u4e0d\u89c4\u8303\uff0c\u5927\u5bb6\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u4e00\u5b9a\u8981\u89c4\u8303\u5f00\u53d1\uff01"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"package com.heifan.demo.domain.vo;\n\nimport com.heifan.demo.entity.TestTreeNode;\nimport lombok.Data;\n\nimport java.util.List;\n\n@Data\npublic class TestTreeVO {\n\n    private Integer id;\n\n    /**\n     * \u7236\u7ea7\u4e3b\u952e\uff080\uff1a\u65e0\u7236\u7ea7\uff09\n     */\n    private Integer parentId;\n\n    /**\n     * \u8282\u70b9\u540d\u79f0\n     */\n    private String nodeName;\n\n    /**\n     * \u5b50\u8282\u70b9\n     */\n    private List<TestTreeVO> childList;\n}\n\n")),(0,a.kt)("h3",{id:"\u529f\u80fd\u5b9e\u73b0"},"\u529f\u80fd\u5b9e\u73b0"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public Object treeById(Integer id) {\n        List<TestTreeVO> testTreeVOS = testTreeNodeDao.selectAll();\n        List<TestTreeVO> testTreeNodeList = testTreeVOS.stream().filter(m -> m.getId().equals(id)).map(\n                (m) -> {\n                    m.setChildList(getChildrens(m, testTreeVOS));\n                    return m;\n                }\n        ).collect(Collectors.toList());\n        String s = JsonTool.beanToJson(testTreeNodeList);\n        log.info(s);\n        return Result.success();\n    }\n\n\n    /**\n     * \u9012\u5f52\u67e5\u8be2\u5b50\u8282\u70b9\n     *\n     * @param root \u6839\u8282\u70b9\n     * @param all  \u6240\u6709\u8282\u70b9\n     * @return \u6839\u8282\u70b9\u4fe1\u606f\n     */\n    private List<TestTreeVO> getChildrens(TestTreeVO root, List<TestTreeVO> all) {\n        List<TestTreeVO> children = all.stream().filter(m -> Objects.equals(m.getParentId(), root.getId())).map(\n                (m) -> {\n                    m.setChildList(getChildrens(m, all));\n                    return m;\n                }\n        ).collect(Collectors.toList());\n        return children;\n    }\n")))}m.isMDXComponent=!0}}]);